name: 'Bump Version in Main'

on:
  pull_request:
    branches: [ 'main' ]
  push:
    branches: [ 'main' ]  

jobs:
  bump-version:
    name: 'Bump Version'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Checkout branch'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Fetch latest package.json from main'
        run: |
          git fetch origin main
          git checkout origin/main -- package.json  # Copy the latest package.json from main
          echo "Updated package.json from main:"
          cat package.json

      - name: 'Ensure branch package.json version matches main'
        run: |
          git add package.json
          git commit -m "ci: sync package.json version with main" || echo "No changes to commit"
      
      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          major-wording: 'major,breaking,overhaul,revamp'
          minor-wording: 'minor,added,feat,feature,implement,new,introduced'
          patch-wording: 'fix,bugfix,patch,workaround,secure,security,correct'
          default: 'patch'

          tag-prefix: 'v'
          tag-suffix: '-beta'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Check if tag already exists'
        run: |
          TAG_NAME="${{ steps.version-bump.outputs.newTag }}"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists. Skipping push."
            exit 0
          fi

      - name: 'Commit and Push Version Bump'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add package.json
          git commit -m "ci: version bump to ${{ steps.version-bump.outputs.newTag }}"
          git push origin HEAD:main  # Push to main if PR is merged
